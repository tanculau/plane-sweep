name: Deploy

# By default, runs if you push to main. keeps your deployed app in sync with main branch.
on:
  release:
    types:
    - published
jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: plane_sweep
            asset_name: plane_sweep-linux-amd64
          - os: ubuntu-24.04-arm
            artifact_name: plane_sweep
            asset_name: plane_sweep-linux-arm64
          - os: windows-latest
            artifact_name: plane_sweep.exe
            asset_name: plane_sweep-windows-amd64
          - os: 	windows-11-arm
            artifact_name: plane_sweep.exe
            asset_name: plane_sweep-windows-arm64
          - os: macos-latest
            artifact_name: plane_sweep
            asset_name: plane_sweep-macos-arm64
          - os: macos-13
            artifact_name: plane_sweep
            asset_name: plane_sweep-macos-amd64
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - name: Install cargo-hakari
        uses: taiki-e/install-action@v2 # v2
        with:
          tool: cargo-hakari
      - name: disable hakari
        run: cargo hakari disable
      - name: Install cargo-about
        run: cargo install --locked cargo-about
      - name: Build Release
        run: cargo b  --profile=release-native
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.RELEASE_SECRET }}
          file: target/release-native/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}

  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4 # repo checkout

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets	: wasm32-unknown-unknown
      - name: Rust Cache # cache the rust build artefacts
        uses: Swatinem/rust-cache@v2
      - name: Download and install Trunk binary
        run: wget -qO- https://github.com/thedodd/trunk/releases/latest/download/trunk-x86_64-unknown-linux-gnu.tar.gz | tar -xzf-
      - name: Install cargo-about
        run: cargo install --locked cargo-about
      - name: Build # build
        # Environment $public_url resolves to the github project page.
        # If using a user/organization page, remove the `${{ github.event.repository.name }}` part.
        # using --public-url something will allow trunk to modify all the href paths like from favicon.ico to repo_name/favicon.ico .
        # this is necessary for github pages where the site is deployed to username.github.io/repo_name and all files must be requested
        # relatively as eframe_template/favicon.ico. if we skip public-url option, the href paths will instead request username.github.io/favicon.ico which
        # will obviously return error 404 not found.
        run: ./trunk build --release -M --no-sri=true
      - name: Compress dist
        uses: a7ul/tar-action@v1.1.0
        id: compress
        with:
          command: c
          files: |
            ./dist
          outPath: dist.tar.gz
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.RELEASE_SECRET }}
          file: dist.tar.gz
          asset_name: web
          tag: ${{ github.ref }}
