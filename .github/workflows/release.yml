name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  changelog:
    name: Generate changelog
    runs-on: ubuntu-latest
    outputs:
        release_body: ${{ steps.git-cliff.outputs.content }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate a changelog
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md
          GITHUB_REPO: ${{ github.repository }}

  publish:
    name: Publish
    needs: changelog
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - uses: ncipollo/release-action@v1
      with:
          body: ${{ needs.changelog.outputs.release_body }}

  build-windows:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: publish
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - os: windows-latest
            asset_name: plane_sweep-windows-amd64.exe
            binary-kind: exe
          - os: 	windows-11-arm
            asset_name: plane_sweep-windows-arm64.exe
            binary-kind: exe
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - name: Install cargo-hakari
        uses: taiki-e/install-action@v2 # v2
        with:
          tool: cargo-hakari
      - name: disable hakari
        run: cargo hakari disable
      - name: Install cargo-about
        run: cargo install --locked cargo-about
      - name: Build Release
        run: cargo b  --profile=release-native --target-dir dist
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          file: dist/release-native/plane-sweep.exe
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}

  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    needs: publish
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4 # repo checkout

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets	: wasm32-unknown-unknown
      - name: Rust Cache # cache the rust build artefacts
        uses: Swatinem/rust-cache@v2
      - name: Download and install Trunk binary
        run: wget -qO- https://github.com/thedodd/trunk/releases/latest/download/trunk-x86_64-unknown-linux-gnu.tar.gz | tar -xzf-
      - name: Install cargo-about
        run: cargo install --locked cargo-about
      - name: Build # build
        # Environment $public_url resolves to the github project page.
        # If using a user/organization page, remove the `${{ github.event.repository.name }}` part.
        # using --public-url something will allow trunk to modify all the href paths like from favicon.ico to repo_name/favicon.ico .
        # this is necessary for github pages where the site is deployed to username.github.io/repo_name and all files must be requested
        # relatively as eframe_template/favicon.ico. if we skip public-url option, the href paths will instead request username.github.io/favicon.ico which
        # will obviously return error 404 not found.
        run: ./trunk build --release -M --no-sri=true
      - name: Compress dist
        uses: a7ul/tar-action@v1.1.0
        id: compress
        with:
          command: c
          files: |
            ./dist
          outPath: dist.tar.gz
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          file: dist.tar.gz
          asset_name: web.tar.gz
          tag: ${{ github.ref }}

  build-github-pages:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4 # repo checkout

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets	: wasm32-unknown-unknown
      - name: Rust Cache # cache the rust build artefacts
        uses: Swatinem/rust-cache@v2
      - name: Download and install Trunk binary
        run: wget -qO- https://github.com/thedodd/trunk/releases/latest/download/trunk-x86_64-unknown-linux-gnu.tar.gz | tar -xzf-
      - name: Install cargo-about
        run: cargo install --locked cargo-about
      - name: Build # build
        # Environment $public_url resolves to the github project page.
        # If using a user/organization page, remove the `${{ github.event.repository.name }}` part.
        # using --public-url something will allow trunk to modify all the href paths like from favicon.ico to repo_name/favicon.ico .
        # this is necessary for github pages where the site is deployed to username.github.io/repo_name and all files must be requested
        # relatively as eframe_template/favicon.ico. if we skip public-url option, the href paths will instead request username.github.io/favicon.ico which
        # will obviously return error 404 not found.
        run: ./trunk build --release -M --public-url $public_url
        env:
          public_url: "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          # this option will not maintain any history of your previous pages deployment
          # set to false if you want all page build to be committed to your gh-pages branch history
          single-commit: true


  build-linux:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: publish
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset_name: plane_sweep-linux-amd64
            target : --target x86_64-unknown-linux-gnu
          - os: ubuntu-24.04-arm
            asset_name: plane_sweep-linux-arm64
            target: aarch64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-06-29
          components: rust-src
        
      - uses: Swatinem/rust-cache@v2
      - name: Install cargo-hakari
        uses: taiki-e/install-action@v2 # v2
        with:
          tool: cargo-hakari
      - name: disable hakari
        run: cargo hakari disable
      - name: Install cargo-about
        run: cargo install --locked cargo-about
      - name: Install Binutils
        run: apt-get install binutils
      - name: Build Release
        env:
          RUSTFLAGS: "-Csymbol-mangling-version=v0"
        run: cargo b  --profile=release-native-split --target-dir dist -Z build-std=std,panic_abort -Z build-std-features=panic_immediate_abort --target ${{ matrix.target }}
      - name: Move binary
        run: mv dist/${{ matrix.target }}/release-native-split/plane-sweep plane-sweep
      - name: Split Debug
        run: objcopy --only-keep-debug     plane-sweep plane-sweep.debug
      - name: Remove Debug
        run: objcopy objcopy --strip-debug --strip-unneeded --remove-section=".gnu_debuglink" --add-gnu-debuglink="plane-sweep.debug" plane-sweep
      - name: Compress debug
        uses: a7ul/tar-action@v1.1.0
        id: compress
        with:
          command: c
          files: |
            plane-sweep.debug
          outPath: debug.tar.gz
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          file: plane-sweep
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
      - name: Upload debug to release
        uses: svenstaro/upload-release-action@v2
        with:
          file: debug.tar.gz
          asset_name: ${{ matrix.asset_name }}.debug
          tag: ${{ github.ref }}

